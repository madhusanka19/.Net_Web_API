pipeline {
agent any
environment {
   GIT_COMMIT_SHORT = sh(
     script: "printf \$(git rev-parse --short ${GIT_COMMIT})",
     returnStdout: true
    )
}
tools {
   maven 'maven'
   jdk 'java'
}
stages {
  stage('Build project') {
    steps {
      sh '''mvn install'''
    }
  }
  stage('SonarQube analysis') {
    environment {
      SCANNER_HOME = tool 'Sonar-scanner'
    }
    steps {
        SonarScanner.MSBuild.exe begin /k:"TestProject" /d:sonar.host.url="http://192.168.1.226:9000" /d:sonar.login="7ae5da4a4739342c751c4cef2fc1d4810341a2ba"
        MsBuild.exe /t:Rebuild
        SonarScanner.MSBuild.exe end /d:sonar.login="7ae5da4a4739342c751c4cef2fc1d4810341a2ba"
       }
     }
}
   stage('SQuality Gate') {
     steps {
       timeout(time: 1, unit: 'MINUTES') {
       waitForQualityGate abortPipeline: true
       }
  }
}
}
}
